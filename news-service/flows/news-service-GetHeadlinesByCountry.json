{
	"schemaVersion": "4",
	"info": {
		"name": "news-service - get /news/headlines"
	},
	"parameter": {
		"properties": {
			"params": {
				"type": "object",
				"description": "The parameters from the endpoint."
			},
			"request": {
				"type": "object",
				"description": "The HTTP request."
			},
			"config": {
				"type": "object",
				"description": "The service's configuration"
			},
			"env": {
				"type": "object",
				"description": "The host OS environment"
			}
		},
		"additionalProperties": false,
		"required": [
			"params",
			"request",
			"config",
			"env"
		]
	},
	"start": "condition.2",
	"nodes": {
		"rest.1": {
			"type": "nodehandler://@axway/api-builder-plugin-fn-restclient/rest",
			"name": "GET",
			"method": "get",
			"parameters": [
				{
					"name": "url",
					"type": "jsonpath",
					"value": "$.url",
					"metaName": "URL",
					"metaDescription": "The target URL."
				},
				{
					"name": "headers",
					"type": "jsonpath",
					"value": "$.headers",
					"metaName": "Headers",
					"metaDescription": "The HTTP headers to set."
				}
			],
			"outputs": {
				"2xx": {
					"routes": [
						"condition.1"
					],
					"context": "$.response",
					"metaName": "2XX"
				},
				"3xx": {
					"routes": [
						"http.2"
					],
					"context": "$.response",
					"metaName": "3XX"
				},
				"4xx": {
					"routes": [
						"http.2"
					],
					"context": "$.response",
					"metaName": "4XX"
				},
				"5xx": {
					"routes": [
						"http.2"
					],
					"context": "$.response",
					"metaName": "5XX"
				},
				"error": {
					"routes": [
						"http.3"
					],
					"context": "$.error",
					"metaName": "Error"
				}
			},
			"metaMethod": "GET"
		},
		"http.1": {
			"type": "nodehandler://axway-flow/http",
			"name": "Success",
			"method": "setresponse",
			"parameters": [
				{
					"name": "status",
					"type": "number",
					"value": "200",
					"metaName": "Status",
					"metaDescription": "The HTTP status code"
				},
				{
					"name": "body",
					"type": "jsonpath",
					"value": "$.response.body.articles",
					"metaName": "Body",
					"metaDescription": "The response payload"
				}
			],
			"outputs": {
				"next": {
					"context": "$.response",
					"routes": [],
					"metaName": "Next"
				}
			},
			"metaMethod": "Set HTTP Response"
		},
		"http.2": {
			"type": "nodehandler://axway-flow/http",
			"name": "Bad Request",
			"method": "setresponse",
			"parameters": [
				{
					"name": "body",
					"type": "jsonpath",
					"value": "$.response",
					"metaName": "Body",
					"metaDescription": "The response payload"
				},
				{
					"name": "status",
					"type": "number",
					"value": "400",
					"metaName": "Status",
					"metaDescription": "The HTTP status code"
				}
			],
			"outputs": {
				"next": {
					"context": "$.response",
					"routes": [],
					"metaName": "Next"
				}
			},
			"metaMethod": "Set HTTP Response"
		},
		"http.3": {
			"type": "nodehandler://axway-flow/http",
			"name": "Unexpected Error",
			"method": "setresponse",
			"parameters": [
				{
					"name": "status",
					"type": "number",
					"value": "500",
					"metaName": "Status",
					"metaDescription": "The HTTP status code"
				},
				{
					"name": "body",
					"type": "jsonpath",
					"value": "$.error.message",
					"metaName": "Body",
					"metaDescription": "The response payload"
				}
			],
			"outputs": {
				"next": {
					"context": "$.response",
					"routes": [],
					"metaName": "Next"
				}
			},
			"metaMethod": "Set HTTP Response"
		},
		"condition.1": {
			"type": "nodehandler://axway-flow/condition",
			"name": "Check Response",
			"method": "equals",
			"parameters": [
				{
					"name": "value",
					"type": "string",
					"value": "\"ok\"",
					"metaName": "Value",
					"metaDescription": "The value to test input against."
				},
				{
					"name": "source",
					"type": "jsonpath",
					"value": "$.response.body.status",
					"metaName": "Source",
					"metaDescription": "The input to test."
				}
			],
			"outputs": {
				"true": {
					"routes": [
						"http.1"
					],
					"context": "$.equals",
					"metaName": "True"
				},
				"false": {
					"routes": [
						"http.2"
					],
					"context": "$.equals",
					"metaName": "False"
				}
			},
			"metaMethod": "Equals"
		},
		"condition.2": {
			"type": "nodehandler://axway-flow/condition",
			"name": "News API Key Set?",
			"method": "exists",
			"parameters": [
				{
					"name": "source",
					"type": "jsonpath",
					"value": "$.config.NEWSAPI_APIKEY",
					"metaName": "Source",
					"metaDescription": "The input to test."
				}
			],
			"outputs": {
				"true": {
					"routes": [
						"javascript.1"
					],
					"context": "$.exists",
					"metaName": "True"
				},
				"false": {
					"routes": [
						"http.3"
					],
					"context": "$.exists",
					"metaName": "False"
				}
			},
			"metaMethod": "Exists"
		},
		"javascript.1": {
			"type": "nodehandler://@axway/api-builder-plugin-fn-javascript/javascript",
			"name": "Format URL",
			"method": "Execute",
			"parameters": [
				{
					"name": "data",
					"type": "jsonpath",
					"value": "$",
					"metaName": "data",
					"metaDescription": "The value to apply as the `data` argument to the JavaScript code. For objects and arrays, `data` is passed by reference."
				},
				{
					"name": "code",
					"type": "string",
					"value": "\"const { config, params } = data;\\n  // In service mesh we rely on TLS origination\\n  const protocol = config.TLS_ORIGINATION ? 'http' : 'https';\\n  const countryFilter = params.country ? `country=${encodeURIComponent(params.country)}` : 'country=';\\n  const categoryFilter = params.category ? `category=${encodeURIComponent(params.category)}` : 'category='; \\n  return `${protocol}://newsapi.org:443/v2/top-headlines?${countryFilter}&${categoryFilter}`;\"",
					"metaName": "code",
					"metaDescription": "A JavaScript function body. Supports `await` and returning promises."
				}
			],
			"outputs": {
				"next": {
					"context": "$.url",
					"routes": [
						"javascript.2"
					],
					"metaName": "Next"
				},
				"error": {
					"context": "$.error",
					"routes": [
						"http.3"
					],
					"metaName": "Error"
				}
			},
			"metaMethod": "Execute"
		},
		"javascript.2": {
			"type": "nodehandler://@axway/api-builder-plugin-fn-javascript/javascript",
			"name": "Format Headers",
			"method": "Execute",
			"parameters": [
				{
					"name": "data",
					"type": "jsonpath",
					"value": "$",
					"metaName": "data",
					"metaDescription": "The value to apply as the `data` argument to the JavaScript code. For objects and arrays, `data` is passed by reference."
				},
				{
					"name": "code",
					"type": "string",
					"value": "\"const { config, request } = data;\\n\\n  const traceheaders = config.traceability.headers\\n  \\t.filter(h => request.headers[h] != undefined)\\n  \\t.reduce((obj, key) => {\\n      obj[key] = request.headers[key];\\n      return obj;\\n    }, {});\\n  \\n  \\n  return {\\n  \\t\\\"x-api-key\\\": config.NEWSAPI_APIKEY,\\n    ...traceheaders\\n  };\"",
					"metaName": "code",
					"metaDescription": "A JavaScript function body. Supports `await` and returning promises."
				}
			],
			"outputs": {
				"next": {
					"context": "$.headers",
					"routes": [
						"rest.1"
					],
					"metaName": "Next"
				},
				"error": {
					"context": "$.error",
					"routes": [
						"http.3"
					],
					"metaName": "Error"
				}
			},
			"metaMethod": "Execute"
		}
	}
}